[config]
default_to_workspace = false

[tasks.build-wxwidgets-win]
condition={ platforms = ["windows"]}
script_runner = "@rust"
script = '''
//! ```cargo
//! [dependencies]
//! cc = "1.0.67"
//! ```
fn main() {
    use std::process::Command;
    
    let tool = cc::windows_registry::find_tool("msvc", "msbuild").expect("unable to locate MSVC compiler, did you install Visual Studio?");
    let mut vcvars_path = None;
    let mut current_root = tool.path();
    while let Some(parent) = current_root.parent() {
        let target = parent.join("VC").join("Auxiliary").join("Build").join("vcvars64.bat");
        if target.exists() {
            vcvars_path = Some(target);
            break;
        }
        current_root = parent;
    }
    
    let vcvars_path = vcvars_path.expect("unable to find vcvars64.bat file");
    println!("{:?}", vcvars_path);

    let mut handle = Command::new("cmd")
    .current_dir("vendor/wxWidgets/build/msw")
    .args(&["/k", &vcvars_path.to_string_lossy().to_string(), "&", "nmake", "/f", "makefile.vc", "BUILD=release", "TARGET_CPU=X64", "&", "exit"])
    .spawn()
    .expect("failed to execute nmake");
    handle.wait();

    println!("wxWidgets have been built!")
}
'''

[tasks.build-wxwidgets]
dependencies = [
    "build-wxwidgets-win",
    # TODO: add also the macos task
]